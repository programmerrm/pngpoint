version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - pngnet

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
      - ./backend/.env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - CLOUDFLARE_ACCOUNT_HASH=${CLOUDFLARE_ACCOUNT_HASH}
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - CLOUDFLARE_IMAGE_DOMAIN=${CLOUDFLARE_IMAGE_DOMAIN}
      - CLOUDFLARE_ENDPOINT=${CLOUDFLARE_ENDPOINT}
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
    depends_on:
      - redis
    networks:
      - pngnet

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - pngnet

  nginx:
    image: nginx:1.24
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./backend/static:/backend/static:ro
      - ./backend/media:/backend/media:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    networks:
      - pngnet

networks:
  pngnet:
    driver: bridge
