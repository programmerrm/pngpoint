# =============================
# Step 1: Build Stage (React/Vue Build)
# =============================

# ðŸ‘‰ Use Node.js version 22 as the base image for building frontend
FROM node:22 AS build

# ðŸ‘‰ Set the working directory inside the container
WORKDIR /app

# ðŸ‘‰ Copy only dependency files to leverage Docker layer caching
# ðŸ”¥ Extra Tip: Always copy package*.json first to use cached node_modules layer
COPY package*.json ./

# ðŸ‘‰ Install npm dependencies
RUN npm install

# ðŸ‘‰ Now copy the rest of the source code
COPY . .

# ðŸ‘‰ Build the optimized production static files (dist folder will be created)
RUN npm run build

# =============================
# Step 2: Production Stage (Nginx Serve)
# =============================

# ðŸ‘‰ Use a lightweight production web server (Nginx Alpine)
# ðŸ”¥ Extra Tip: nginx:alpine is super small (~20MB) and very fast
FROM nginx:alpine

# ðŸ‘‰ Copy the built static files from build stage to Nginxâ€™s HTML folder
COPY --from=build /app/build /usr/share/nginx/html

# ðŸ‘‰ Expose port 80 (for serving HTTP traffic)
EXPOSE 80

# ðŸ‘‰ Start Nginx in foreground (container wonâ€™t exit immediately)
CMD [ "nginx", "-g", "daemon off;" ]
