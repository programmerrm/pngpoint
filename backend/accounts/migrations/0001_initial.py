# Generated by Django 5.2.1 on 2025-06-19 13:36

import accounts.utils.image_upload
import core.utils
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.CharField(db_index=True, editable=False, max_length=9, unique=True, validators=[django.core.validators.MinLengthValidator(9)])),
                ('image', models.ImageField(blank=True, null=True, upload_to=accounts.utils.image_upload.USER_DIRECTORY_PATH, validators=[core.utils.VALIDATE_IMAGE_EXTENSION, core.utils.VALIDATE_IMAGE_SIZE])),
                ('username', models.CharField(db_index=True, max_length=40, unique=True, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.RegexValidator(message='Username can only contain letters, numbers, and underscores.', regex='^[a-zA-Z0-9_]+$')])),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, validators=[django.core.validators.MinLengthValidator(10), core.utils.VALIDATE_EMAIL])),
                ('first_name', models.CharField(blank=True, db_index=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(3), core.utils.VALIDATE_ALPHA])),
                ('last_name', models.CharField(blank=True, db_index=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(3), core.utils.VALIDATE_ALPHA])),
                ('number', models.CharField(blank=True, db_index=True, max_length=20, null=True, validators=[django.core.validators.MinLengthValidator(11), core.utils.VALIDATE_PHONE_NUMBER])),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('admin', 'Admin')], default='user', max_length=10)),
                ('terms_accepted', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_block', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-date_joined'],
            },
        ),
    ]
